{"ast":null,"code":"import _toConsumableArray from \"/Users/yerlysdavielfriasgarcia1/Desktop/my-first-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/yerlysdavielfriasgarcia1/Desktop/my-first-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yerlysdavielfriasgarcia1/Desktop/my-first-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yerlysdavielfriasgarcia1/Desktop/my-first-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yerlysdavielfriasgarcia1/Desktop/my-first-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yerlysdavielfriasgarcia1/Desktop/my-first-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yerlysdavielfriasgarcia1/Desktop/my-first-app/src/components/todo/Todo.js\";\nimport React, { Component } from 'react'; //component\n\nimport List from '../list/List'; //ID Ramdom\n\nimport uuidv4 from 'uuid/v4'; //Style\n\nimport './Todo.css';\n\nvar Todo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todo, _Component);\n\n  function Todo() {\n    var _this;\n\n    _classCallCheck(this, Todo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Todo).call(this)); // Initial state...\n\n    _this.handleOnChange = function (e) {\n      var value = e.target.value; // Updating our task state with the input value...\n\n      _this.setState({\n        task: value\n      });\n    };\n\n    _this.handleOnSubmit = function (e) {\n      // Prevent default to avoid the actual form submit...\n      e.preventDefault(); // Once is submited we reset the task value and we push the new task to the items array.\n\n      _this.setState({\n        task: '',\n        items: _toConsumableArray(_this.state.items).concat([{\n          id: uuidv4(),\n          task: _this.state.task,\n          complete: false\n        }])\n      });\n    };\n\n    _this.markAsCompleted = function (id) {\n      // Finding the task by id...\n      var foundTask = _this.state.items.find(function (task) {\n        return task.id === id;\n      }); // Updating the completed status...\n\n\n      foundTask.completed = true; // Updating the state with the new updated task...\n\n      _this.setState({\n        items: _toConsumableArray(_this.state.items).concat(_toConsumableArray(foundTask))\n      });\n    };\n\n    _this.removeTask = function (id) {\n      // Filtering the tasks by removing the specific task id...\n      var filteredTasks = _this.state.items.filter(function (task) {\n        return task.id !== id;\n      }); // Updating items state...\n\n\n      _this.setState({\n        items: filteredTasks\n      });\n    };\n\n    _this.state = {\n      task: '',\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(Todo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // Setting default tasks...\n      this.setState({\n        items: [{\n          id: uuidv4(),\n          task: 'Default Task 1',\n          completed: false\n        }, {\n          id: uuidv4(),\n          task: 'Default Task 2',\n          completed: true\n        }, {\n          id: uuidv4(),\n          task: 'Default Task 3',\n          completed: false\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"New Task:\"), React.createElement(\"form\", {\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.task,\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(List, {\n        items: this.state.items,\n        markAsCompleted: this.markAsCompleted,\n        removeTask: this.removeTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Todo;\n}(Component);\n\nexport default Todo;","map":{"version":3,"sources":["/Users/yerlysdavielfriasgarcia1/Desktop/my-first-app/src/components/todo/Todo.js"],"names":["React","Component","List","uuidv4","Todo","handleOnChange","e","value","target","setState","task","handleOnSubmit","preventDefault","items","state","id","complete","markAsCompleted","foundTask","find","completed","removeTask","filteredTasks","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//component\nimport List from '../list/List';\n//ID Ramdom\nimport uuidv4 from 'uuid/v4';\n//Style\nimport './Todo.css'\n\n\nclass Todo extends Component {\n    constructor() {\n        super();\n\n        // Initial state...\n        this.state = {\n            task: '',\n            items: []\n        };\n    }\n\n    componentWillMount() {\n        // Setting default tasks...\n        this.setState({\n            items: [\n                {\n                    id: uuidv4(),\n                    task: 'Default Task 1',\n                    completed: false\n                },\n                {\n                    id: uuidv4(),\n                    task: 'Default Task 2',\n                    completed: true\n                },\n                {\n                    id: uuidv4(),\n                    task: 'Default Task 3',\n                    completed: false\n                }\n            ]\n        });\n    }\n\n    handleOnChange = e => {\n        const { target: { value } } = e;\n\n        // Updating our task state with the input value...\n        this.setState({\n            task: value\n        });\n    }\n\n    handleOnSubmit = e => {\n        // Prevent default to avoid the actual form submit...\n        e.preventDefault();\n\n        // Once is submited we reset the task value and we push the new task to the items array.\n        this.setState({\n            task: '',\n            items: [\n                ...this.state.items,\n                {\n                    id: uuidv4(),\n                    task: this.state.task,\n                    complete: false\n                }\n            ]\n        });\n    }\n\n    markAsCompleted = id => {\n        // Finding the task by id...\n        const foundTask = this.state.items.find(task => task.id === id);\n\n        // Updating the completed status...\n        foundTask.completed = true;\n\n        // Updating the state with the new updated task...\n        this.setState({\n            items: [\n                ...this.state.items,\n                ...foundTask\n            ]\n        });\n    }\n\n    removeTask = id => {\n        // Filtering the tasks by removing the specific task id...\n        const filteredTasks = this.state.items.filter(task => task.id !== id);\n\n        // Updating items state...\n        this.setState({\n            items: filteredTasks\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Todo\">\n                <h1>New Task:</h1>\n\n                <form onSubmit={this.handleOnSubmit}>\n                    <input value={this.state.task} onChange={this.handleOnChange} />\n                </form>\n\n                <List\n                    items={this.state.items}\n                    markAsCompleted={this.markAsCompleted}\n                    removeTask={this.removeTask}\n                />\n            </div>\n        );\n    }\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}